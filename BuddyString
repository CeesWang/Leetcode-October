class Solution {
    public boolean buddyStrings(String A, String B) {
        if (A.length() != B.length()) {
            return false;
        }
        int mismatches = 0;
        int len = A.length();
        int [] countArr = new int [26];
        ArrayList<Integer> mismatchList = new ArrayList<>();
        for (int i = 0; i < len; ++i) {
            char c = A.charAt(i);
            char d = B.charAt(i);
            if (c != d) {
                mismatchList.add(i);
                mismatches++;
                if (mismatches > 2) {   // mismatch > 2
                    return false;
                }
            }
            countArr[c - 'a']++;
            countArr[d - 'a']++;
        }
        if (mismatches == 0) {          // mismatch 0
            for (int count : countArr) {
                if (count > 2) {
                    return true;
                }
            }
            return false;
        }
        if (mismatches == 1) {          // mismatch 1
           return false; 
        }
                                        // mismatches 2
        int mismatchIdx1 = mismatchList.get(0);
        int mismatchIdx2 = mismatchList.get(1);
        return A.charAt(mismatchIdx1) == B.charAt(mismatchIdx2) && A.charAt(mismatchIdx2) == B.charAt(mismatchIdx1);
    }
}
