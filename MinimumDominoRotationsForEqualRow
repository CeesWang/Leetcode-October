class Solution {
    public int minDominoRotations(int[] A, int[] B) {
        if (A.length == 1) {
            return 1;
        }
        int rotationsA = 0;
        int rotationsB = 0;
        int prev = A[0];
        boolean isEqualRow= true;
        for (int i = 1; i < A.length; ++i) {
            if (A[i] != prev) {
                if (B[i] == prev) {
                    ++rotationsA;
                }
                else {                  // first row can't be equal 
                    rotationsA = -1;
                    isEqualRow = false;
                    break;
                }
            }
        }
        if (isEqualRow && A[0] != B[0]) {     // row A is equal and B is not means we return answer     
            return rotationsA;
        }
        prev = B[0];
        for (int i = 1; i < B.length; ++i) {
            if (B[i] != prev) {
                if (A[i] == prev) {
                    ++rotationsB;
                }
                else {
                    return -1;
                }
            }
        }   
        return rotationsA == -1 ? rotationsB : Math.min(rotationsA, rotationsB);
    }
}
